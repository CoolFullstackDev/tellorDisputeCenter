{"ast":null,"code":"var _jsxFileName = \"/home/samkuhlmann/Documents/ody/tellor/tellorDisputeCenter/src/contexts/Store.js\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport Web3Modal from 'web3modal';\nimport { w3connect, providerOptions, createWeb3User } from '../utils/auth';\nimport { getChainData } from '../utils/chains';\nexport const LoaderContext = createContext(false);\nexport const Web3ModalContext = createContext();\nexport const CurrentUserContext = createContext();\n\nconst Store = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(false);\n  const [web3Modal, setWeb3Modal] = useState(new Web3Modal({\n    network: getChainData(+process.env.REACT_APP_CHAIN_ID).network,\n    // optional\n    providerOptions,\n    // required\n    cacheProvider: true\n  }));\n  useEffect(() => {\n    const initCurrentUser = async () => {\n      let user;\n\n      try {\n        console.log('trying to connect');\n        const w3c = await w3connect(web3Modal);\n        console.log('w3c', w3c);\n        const [account] = await w3c.web3.eth.getAccounts();\n        setWeb3Modal(w3c);\n        console.log(account);\n        user = createWeb3User(account);\n        setCurrentUser(user);\n      } catch (e) {\n        console.error(`Could not log in with web3`);\n      }\n    };\n\n    if (web3Modal.cachedProvider) {\n      console.log('initCurrentUser');\n      initCurrentUser();\n    }\n  }, [web3Modal, currentUser]);\n  return /*#__PURE__*/React.createElement(LoaderContext.Provider, {\n    value: [loading, setLoading],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Web3ModalContext.Provider, {\n    value: [web3Modal, setWeb3Modal],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: [currentUser, setCurrentUser],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, children)));\n};\n\nexport default Store;","map":{"version":3,"sources":["/home/samkuhlmann/Documents/ody/tellor/tellorDisputeCenter/src/contexts/Store.js"],"names":["React","useState","useEffect","createContext","Web3Modal","w3connect","providerOptions","createWeb3User","getChainData","LoaderContext","Web3ModalContext","CurrentUserContext","Store","children","currentUser","setCurrentUser","loading","setLoading","web3Modal","setWeb3Modal","network","process","env","REACT_APP_CHAIN_ID","cacheProvider","initCurrentUser","user","console","log","w3c","account","web3","eth","getAccounts","e","error","cachedProvider"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,cAArC,QAA2D,eAA3D;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,MAAMC,aAAa,GAAGN,aAAa,CAAC,KAAD,CAAnC;AACP,OAAO,MAAMO,gBAAgB,GAAGP,aAAa,EAAtC;AACP,OAAO,MAAMQ,kBAAkB,GAAGR,aAAa,EAAxC;;AAEP,MAAMS,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,EAA9C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CACxC,IAAIG,SAAJ,CAAc;AACZgB,IAAAA,OAAO,EAAEZ,YAAY,CAAC,CAACa,OAAO,CAACC,GAAR,CAAYC,kBAAd,CAAZ,CAA8CH,OAD3C;AACoD;AAChEd,IAAAA,eAFY;AAEK;AACjBkB,IAAAA,aAAa,EAAE;AAHH,GAAd,CADwC,CAA1C;AAQAtB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,eAAe,GAAG,YAAY;AAClC,UAAIC,IAAJ;;AACA,UAAI;AACFC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,cAAMC,GAAG,GAAG,MAAMxB,SAAS,CAACa,SAAD,CAA3B;AAEAS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,GAAnB;AACA,cAAM,CAACC,OAAD,IAAY,MAAMD,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAaC,WAAb,EAAxB;AACAd,QAAAA,YAAY,CAACU,GAAD,CAAZ;AAEAF,QAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACAJ,QAAAA,IAAI,GAAGnB,cAAc,CAACuB,OAAD,CAArB;AACAf,QAAAA,cAAc,CAACW,IAAD,CAAd;AACD,OAXD,CAWE,OAAOQ,CAAP,EAAU;AACVP,QAAAA,OAAO,CAACQ,KAAR,CAAe,4BAAf;AACD;AACF,KAhBD;;AAkBA,QAAIjB,SAAS,CAACkB,cAAd,EAA8B;AAC5BT,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAH,MAAAA,eAAe;AAChB;AACF,GAvBQ,EAuBN,CAACP,SAAD,EAAYJ,WAAZ,CAvBM,CAAT;AAyBA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACE,OAAD,EAAUC,UAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE,CAACC,SAAD,EAAYC,YAAZ,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE,CAACL,WAAD,EAAcC,cAAd,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF,CADF,CADF;AASD,CA7CD;;AA+CA,eAAeD,KAAf","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport Web3Modal from 'web3modal';\n\nimport { w3connect, providerOptions, createWeb3User } from '../utils/auth';\nimport { getChainData } from '../utils/chains';\n\nexport const LoaderContext = createContext(false);\nexport const Web3ModalContext = createContext();\nexport const CurrentUserContext = createContext();\n\nconst Store = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(false);\n  const [web3Modal, setWeb3Modal] = useState(\n    new Web3Modal({\n      network: getChainData(+process.env.REACT_APP_CHAIN_ID).network, // optional\n      providerOptions, // required\n      cacheProvider: true,\n    }),\n  );\n\n  useEffect(() => {\n    const initCurrentUser = async () => {\n      let user;\n      try {\n        console.log('trying to connect');\n        const w3c = await w3connect(web3Modal);\n\n        console.log('w3c', w3c);\n        const [account] = await w3c.web3.eth.getAccounts();\n        setWeb3Modal(w3c);\n\n        console.log(account);\n        user = createWeb3User(account);\n        setCurrentUser(user);\n      } catch (e) {\n        console.error(`Could not log in with web3`);\n      }\n    };\n\n    if (web3Modal.cachedProvider) {\n      console.log('initCurrentUser');\n      initCurrentUser();\n    }\n  }, [web3Modal, currentUser]);\n\n  return (\n    <LoaderContext.Provider value={[loading, setLoading]}>\n      <Web3ModalContext.Provider value={[web3Modal, setWeb3Modal]}>\n        <CurrentUserContext.Provider value={[currentUser, setCurrentUser]}>\n          {children}\n        </CurrentUserContext.Provider>\n      </Web3ModalContext.Provider>\n    </LoaderContext.Provider>\n  );\n};\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}